* { /*global effect*/
    box-sizing: border-box;
}

html,
body {
    box-sizing: border-box;
    font-family: sans-serif;
    font-size: 16px;
    margin: 0;
}

a {
    color: black;
}

h1 { /*font size doesn't matter, the data hierarchy does*/
    font-size: 48px;
}

h2 {

}

h3 {

}


p{
    font-size: 20px;
}

header {
    background-color: #85c4ff;
    padding: 20px;
}

header nav {
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: flex-end;
    margin: 0 auto;
    max-width: 900px;

}
 header nav a{
    color: black;
    display: block;
    font-size: 20px;
    font-weight: bold; /*variable web fonts, but you can fake a bold */
    text-decoration: none;
    margin: 0 10px;
 }

 header nav a:last-of-type { /*pseudo selector */
    margin-right: 0;
 }

.section-wrapper {
    background-color: #cff1ca;
    padding: 25px;
}

.interior {
    background-color: #9ef490;
    border: 10px solid green;
    margin: 40px auto; /*margin will fill remainder of space*/
    padding: 40px;
}

#anchor-id {
    color: no; /*never use id for applying style, just use a class once */
}

.flex-interior {
    display: flex;
    flex-wrap: wrap;
    gap: 40px;
    margin: 0 auto;
    max-width: 900px;
}

.flex-parent {
    background-color: lightcoral;
    border: 10px solid brown;
    display: flex;
    flex-basis: 40%; /* this gave me weird outcome, prof said depends on browser size*/
    flex-shrink: 0;
    gap: 25px;
    padding: 25px;
    width: 100%;
}

.flex-parent h1{
    color: brown;
}

.flex-parent:first-of-type { /*this is a pseudo selector*/
    flex-basis: 100%;
    padding: 40px;
}

.flex-parent-stacked {
    flex-direction: column; /* changing default flex direction which is row */
}

.flex-child {
    background-color: beige;
    border: 2px solid orange;
    flex-basis: 33%;
    min-height: 100px;
}

.flex-child-big{
    align-items: center;
    display: flex;
    flex-basis: 100%;
    justify-content: center;
    margin: 0 auto;
    max-width: 800px;
}

.positioning-wrapper {
    background-color: #cad7f1;
    position: relative;
}

.interior--positioning {
    background-color: #85c4ff;
    border-color: #0e3f9e;
    min-height: 600px;
    position: relative;
}

.circle {
    background-color: white;
    border: 5px solid #0e3f9e;
    border-radius: 50%;
    height: 80px;
    position: absolute;
    width: 80px;
}

.square {
    background-color: white;
    border: 5px solid #0e3f9e;
    height: 80px;
    position: absolute;
    width: 80px;
}

/*
static (default positioning)
relative
absolute
fixed
*/